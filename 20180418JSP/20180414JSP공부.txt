20180415 JSP 공부

<리다이렉트 방식과 포워드 방식의 차이>

* 둘 다 특정 URL로 접근시킬 수 있다.

* 호출 측면 
	- 포워드: 웹 서버에서 호출, 
	- 리다이렉트: 클라이언트에서 http를 요청하여 호출

* 코드 측면 
	- 포워드: 리퀘스트와 리스폰스가 있다. 
	- 리다이렉트: 한 줄의 url만 있다.즉 클라이언트가 직접 주소를 쳐서 들어가는 효과와 같다.

* 객체 측면
	- 포워드: setAttribute로 소유한 객체를 실어나를 수 있다.
	- 리다이렉트 : 텍스트만 보낼 수 있다. 말그대로 사용자가 직접 주소를 치는 것과 같기 때문에 get방식처럼 주소를 보낼 수 밖에 없다.

* 한글 측면
	- 포워드: request와 response째로 나르기 때문에 한글 변환 필요 없다.
	- 리다이렉트 : URI 인코딩이 필요하다. ex)response.sendRedirect("main.jsp?파라미터 이름="+URLEncoder.encode("파라미터값","UTF-8"));

* 서버 측면
	- 포워드: 같은 웹 서버 내의 프로젝트만 호출할 수 있다.
	- 리다이렉트: 어떤 웹사이트 URL이든 갖다쓸 수 있다.

* 주소 측면
	- 포워드: 웹 브라우저의 주소가 바뀌지 않는다.
	- 리다이렉트: 웹 브라우저의 주소가 파일명에 따라 바뀐다.

* 효율 측면
	- 포워드: Request Dispatcher이용, 포워드된 화면이 클라이언트에 보여지는 방식.
		  한 번의 요청과 응답으로 처리. 실행 속도 빠르다. 하지만 클라이언트 브라우저에서 URL이 바뀌지 않아서 어디서 들어왔는지 확인이 불가능하다.
	- 리다이렉트: 요청된 jsp에서 일단 브라우저로 응답 메시지를 보냈다가 다시 서버로 재요청하는 방식.
		      일단 응답이 브라우저로 들어간 다음 재요청을 하는 방식
		      응답이 들어온 파일로 브라우저가 변경된다.
		      하지만 두번의 요청과 응답으로 처리되므로 실행 속도는 포워드 방식보단 느리다.
* 예시 : 상담원


<application  내장 객체>

* 정의: 하나의 웹 애플리케이션을 관리하고 웹 애플리케이션 안에서의 자원 공유. 웹 애플리케이션 = 웹 프로젝트

* application은 javax.servlet.ServletContext 인터페이스를 구현한 객체로 서버 기동 시 웹 애플리케이션 당 하나만 생성.

* applecation 객체 관련 메소드
- getServerInfo() : 컨테이너의 이름과 버전 반환
- getContextPath() : 웹 애플리케이션의 URL 경로 중 컨텍스트 패스명을 반환.
- getRealPath() : JSP의 실제 경로 반환
- getMineType(filename) : 지정된 파일의 MIME 타입을 반환
- log(message) : 지정된 message 로그 저장

<내장 객체의 영역>
* 객체의 유효기간이라고 불림
* page - 하나의 JSP 페이지를 처리할 때 사용되는 영역
* request - 하나의 요청을 처리할 때 사용되는 영역
* session - 하나의 브라우저와 관련된 영역
* application - 하나의 웹 애플리케이션과 관련된 영역

각각의 영역은 관련된 내장 객체를 가지고 있다.

* page > request > session > application

<액션 태그>
* <jsp:forward> : 다른 사이트로 이동할 때, 페이지 흐름 제어할 때
* <jsp:include> : 정적 혹은 동적인 자원을 현재 페이지 내용에 포함, 페이지 모듈화할 때
* <jsp: param> : <jsp: forward>,<jsp:include>,<jsp:plugin>과 같이 사용되어 파라미터를 추가할 때 사용
* <jsp: useBean> : 빈을 생성하고 사용하기 위한 환경을 정의하는 액션 태그
* <jsp: setProperty>: 액션은 빈에서 속성 값을 할당
* <jsp: getProperty> : 액션은 빈에서 속성 값을 얻어 올 때 사용

* 액션 태크는 xml 문법을 따른다. 즉 시작 태그와 함께 반드시 종료 태그를 포함

* <jsp:forward> 액션 태그 : 현재 JSP 페이지에서 URL로 지정한 특정 페이지로 넘어갈 때 사용하는 태그
			    한마디로 forward 방식을 간단하게 표현한 것.

* <jsp: param> 액션 태그 : <jsp:forward> 액션 태그로 이동하는 페이지에 정보를 추가하고 싶을 경우에. 단독 사용못함.
			   <jsp: param name="파라미터" value="파라미터값">/>

* <jsp:include> 액션 태그 :  <jsp:include page="urlSpec" flush="true" 또는 "false"/>
			   여기서 flush는 출력 버퍼에 저장되어 있는 데이터를 내준다는 의미
			   컴파일할때 합쳐지지 않고 제어권이 지정한 페이지로 넘어갔다가 다시 되돌아온다.
			   변수를 서로 공유해서 사용할 수 없다.
				따라서 포함될 페이지가 독립적인 하나의 페이지여야만 한다.				