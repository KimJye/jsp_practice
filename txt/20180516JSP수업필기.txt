20180516JSP수업필기

* stored procedure - >DB에 저장된 sql

* select * from student where true -> true면 모든 레코드가 true이므로 모든 레코드를 조회한다.

* WHERE 
  (@ss = '0') OR                     //false
  (@ss = '1' AND name LIKE @st) OR    //false
  (@ss = '2' AND departmentNAme LIKE @st) //false
 -  @ss 변수 값이 0 이면, 전체 레코드가 조회되고,
 - @ss 변수 값이 1 이면, 이름이 @st 변수 값과 패턴이 일치하는 학생만 조회되고,
 - @ss 변수 값이 2 이면, 학과명이 @st 변수 값과 패턴이 일치하는 학생만 조회된다.
	- 즉 @ss 변수에 의해서 조회 조건이 선택된다.

* 정렬 case end 는 삼항연산자와 비슷하다. 이 때 변수타입이 같아야 한다.
	CASE WHEN @od = '0' THEN s.ID
             WHEN @od = '1' THEN d.departmentName
             WHEN @od = '2' THEN s.year
	END
 -> 여기서는 문자열 타입으로 맞춰주지만 문제가 생긴다. 이런 문제를 피하려면, 타입이 동일한 필드만 모아서 CASE WHEN END로 구현해야 한다.

* 값이 있는 소스코드 = 표현식

* 저장 프로시져 = sql 명령을 DB에 미리 등록해 놓고 호출하여 실행한다.
 - DEFINER : 지금 나의 계정
 - IN : 프로시져로 전달됨
 - OUT : 값을 변수로 리턴.
 - Begin end 사이가 문장.
 - 파라미터 변수에는 @이가 없다.

* SQL 명령이 DB엔진에 의해서 실행 될 때
 - 1.최적화된 Query Plan만들어지고
 - 2.Plan대로 sql명령을 실행한다.
 - 따라서 최적화 된 좋은 실행 계획을 만들면 좋지만 이것만드는것이 오래 걸릴수가 있다.
 - 따라서 좋은 실행 계획을 만들려면 시간이 오래 걸린다.
 - 복잡하고 느린 SQL 명령은 저장프로시져 형태로 만들어서 실행하는 것이 좋다.

* StudentDAO 메소드에서 String sql = "call student_findAll(?, ?, ?, ?, ?)";
* count 메소드에서 String sql = "call student_count(?, ?)";